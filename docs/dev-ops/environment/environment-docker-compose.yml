# 命令执行 docker-compose up -d
# docker-compose -f environment-docker-compose.yml up -d
version: '3.9'
services:
  # yum install -y httpd-tools
  nginx:
    image: nginx:1.25.3
    container_name: nginx
    restart: always
    ports:
      - '443:443'
      - '80:80'
    volumes:
      - ./nginx/logs:/var/log/nginx
      - ./nginx/html:/usr/share/nginx/html
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl/
    privileged: true

  mysql:
    image: mysql:8.0.32
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      TZ: Asia/Shanghai
      # MYSQL_ALLOW_EMPTY_PASSWORD: 'yes' # 可配置无密码，注意配置 SPRING_DATASOURCE_PASSWORD=
      MYSQL_ROOT_PASSWORD: 123qwe!@#QWE
      # MYSQL_USER: xfg
      # MYSQL_PASSWORD: !@QW12qw
    networks:
      - my-network
    depends_on:
      - mysql-job-dbdata
    ports:
      - "13306:3306"
    volumes:
      - ./sql:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 15s
    volumes_from:
      - mysql-job-dbdata

  # 自动加载数据
  mysql-job-dbdata:
    image: alpine:3.18.2
    container_name: mysql-job-dbdata
    volumes:
      - /var/lib/mysql

  # phpmyadmin https://hub.docker.com/_/phpmyadmin
  phpmyadmin:
    image: phpmyadmin:5.2.1
    container_name: phpmyadmin
    hostname: phpmyadmin
    ports:
      - 8899:80
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306
      - MYSQL_ROOT_PASSWORD=123qwe!@#QWE
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - my-network

  # RedisAdmin https://github.com/joeferner/redis-commander
  redis-admin:
    image: spryker/redis-commander:0.8.0
    container_name: redis-admin
    hostname: redis-commander
    restart: always
    ports:
      - 8081:8081
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=admin
      - HTTP_PASSWORD=admin
    networks:
      - my-network
    depends_on:
      redis:
        condition: service_healthy

  # Redis
  redis:
    image: redis:7.2.0
    container_name: redis
    restart: always
    hostname: redis
    privileged: true
    ports:
      - 16379:6379
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - my-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

  chatgpt-data-app:
    image: fuzhengwei/chatgpt-data-app:1.4
    container_name: chatgpt-data-app
    ports:
      - "8091:8091"
    environment:
      - TZ=PRC
      - SERVER_PORT=8091
      - APP_CONFIG_API_VERSION=v1
      - APP_CONFIG_CROSS_ORIGIN=*
      - APP_CONFIG_LIMIT_COUNT=10
      - APP_CONFIG_WHITE_LIST=ojbZUv18lbmriaTjcCWBYkOrSbHA
      - WXPAY_CONFIG_ENABLED=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=123qwe!@#QWE
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/openai?useUnicode=true&characterEncoding=utf8&autoReconnect=true&zeroDateTimeBehavior=convertToNull&serverTimezone=UTC&useSSL=true
      - CHATGLM_SDK_CONFIG_ENABLED=true
      - CHATGLM_SDK_CONFIG_API_HOST=https://open.bigmodel.cn/
      - CHATGLM_SDK_CONFIG_API_KEY=sk-qaWHZdoWHtPNajzy1cAe522e7cFc4b4fB4Ce68Ab203441C4
    volumes:
      - ./log:/var/log/x-api-app
    networks:
      - my-network
    depends_on:
      redis:
        condition: service_healthy
      mysql:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    restart: always

  chatgpt-web-app:
    container_name: chatgpt-web-app
    image: fuzhengwei/chatgpt-web-app:1.2
    ports:
      - "3002:3002"
    networks:
      - my-network
    restart: always

networks:
  my-network:
    driver: bridge